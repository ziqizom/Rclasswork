> a<-sd(0:100)                                                       #练习1-2，用sd计算0-100的标准差           
> a
[1] 29.30017


> demo(plotmath)                                                     #练习1-3 观看数学符号演示，demo(plotmath)
	demo(plotmath)
	---- ~~~~~~~~
Type  <Return>	 to start : return()
> #  Copyright (C) 2002-2016 The R Core Team
> 
> require(datasets)
> require(grDevices); require(graphics)
> ## --- "math annotation" in plots :
> 
> ######
> # create tables of mathematical annotation functionality
> ######
> make.table <- function(nr, nc) {
+     savepar <- par(mar=rep(0, 4), pty="s")
+     plot(c(0, nc*2 + 1), c(0, -(nr + 1)),
+          type="n", xlab="", ylab="", axes=FALSE)
+     savepar
+ }
> get.r <- function(i, nr) {
+     i %% nr + 1
+ }
> get.c <- function(i, nr) {
+     i %/% nr + 1
+ }
> draw.title.cell <- function(title, i, nr) {
+     r <- get.r(i, nr)
+     c <- get.c(i, nr)
+     text(2*c - .5, -r, title)
+     rect((2*(c - 1) + .5), -(r - .5), (2*c + .5), -(r + .5))
+ }
> draw.plotmath.cell <- function(expr, i, nr, string = NULL) {
+     r <- get.r(i, nr)
+     c <- get.c(i, nr)
+     if (is.null(string)) {
+         string <- deparse(expr)
+         string <- substr(string, 12, nchar(string) - 1)
+     }
+     text((2*(c - 1) + 1), -r, string, col="grey50")
+     text((2*c), -r, expr, adj=c(.5,.5))
+     rect((2*(c - 1) + .5), -(r - .5), (2*c + .5), -(r + .5), border="grey")
+ }
> nr <- 20
> nc <- 2
> oldpar <- make.table(nr, nc)


#问题1，用于整数除法的操作符是什么？ 
#答：%/%

#问题2，如何检查变量x是否等于pi？
> x=3.14
> x==pi
[1] FALSE

#问题3，至少描述两种给变量赋值的方式。
a=3.14
a<-3.14
a<<-3.14（全局变量）

#问题4，这5个数字中哪些是无限值：0，Inf，- Inf，NaN和NA？
#答：Inf, -Inf 

#问题5，这5个数字中哪些不是缺失值：0，Inf， -Inf，NaN和NA？
#答：0，NaN，Inf, -Inf 

#计算1~1000所有整数的倒数的反正切（即atan）。
> x<-atan(1/1:1000)

 
#给变量x分配从1到1000的数字向量。计算x的倒数
的反正切值，如第1题所示，然后将其分配给变量y。
现在逆转此操作，计算y的切线的倒数，然后把值赋
给变量z。 
x<-1:1000
y<-atan(1/x)
z1<-deriv(y~atan(1/x),"x");z1
z=1/eval(z1)


#使用==符号、identical和all.equal函数，比较练习1第
2题中的x和z变量。对于all.equal，尝试通过传入函
数的第三个参数改变其容差度。如果容差设置为0，会发生什么？
x==z                              #比较向量内单个变量，结果显示为多个false/true                                         
identical(x,z)                    #直接比较两组向量是否严格相等，结果为一个FALSE/true
all.equal(x,z,t)                  #t为同个数向量，否则无法比较，近似相等返回其差值。容差设置为0，应为false

#定义下面的3个向量。
#1.把true_and_missing赋值为TRUE和NA（至少其中一个，不限顺序）。
#2. 把false_and_missing赋值为FALSE和NA。
#3. 把mixed赋值为TRUE、FALSE和NA。
#将any()和all()函数应用于以上每个向量。

true_and_missing<-c(TRUE,NA)
false_and_missing<-c(FALSE,NA)
mixed<-c(TRUE,FALSE,NA)

any(true_and_missing)
all(true_and_missing)

any(false_and_missing)
all(false_and_missing)

any(mixed)
all(mixed)


#1.生成一个带有100个大于50，小于1000的整数，求他们的加
和，中位数，平均数及方差。
a<-round(runif(100,min = 51,max = 999))
S<-sum(a)
ME<-median(a)
AV<-mean(a)
SD<-sd(a)


#2.一个圆的直径是1000的反正切，利用R，列出代码计算圆面
积。
S<-pi*(atan(1000)/2)^2


#3. 欧几里得度量（euclidean metric）（也称欧氏距离）是一个
通常采用的距离定义，指在m维空间中两个点之间的真实距
离，或者向量的自然长度（即该点到原点的距离）。利用R
列出代码计算p1点(2,3) 到p2点的欧氏距离(13,22)。
t1<-c(2,3)
t2<-c(13,22)
D=sqrt(sum(abs(t1-t2)^2))
