#问题3-1，数字的三个内置类的名称是什么？
#答：double、integer、complex

#问题3-2，用什么函数查找了因子的水平值？
#答： mean()

#问题3-3，如何把字符串“6.283185”转换为数字？
#答： as.integer("6.283185")

#问题3-4，指出至少三个用于检视变量内容的函数。
#答： summary 、 head、 unclass

#问题3-5，如何删除用户工作区中的所有变量？
#答： rm()

#练习3-1，查找以下值Inf、NA、NaN和""的类、类型、模式及存储模式。
#类
> class(NA)
[1] "logical"
> class(Inf)
[1] "numeric"
> class(NaN)
[1] "numeric"
> class("")
[1] "character"

#类型
> typeof(Inf)
[1] "double"
> typeof(NaN)
[1] "double"
> typeof("")
[1] "character"
> typeof(NA)
[1] "logical"

#模式
> mode(NA)
[1] "logical"
> mode(Inf)
[1] "numeric"
> mode("")
[1] "character"
> mode(NaN)
[1] "numeric"

#储存模式
> storage.mode(Inf)
[1] "double"
> storage.mode(NA)
[1] "logical"
> storage.mode("")
[1] "character"
> storage.mode(NaN)
[1] "double"

#练习3-2，随机从“dog”、“cat”、“dolphin”、“hamster”和“goldfish”中以相等的概率生成100个宠物名。显示所得变量的前几个值，并计算每种宠物的数量。
> puppychar<-factor(sample(c("dog","cat","dolphin","hamster","goldfish"),100,replace = TRUE))
> summary(puppychar)
> list(puppychar,20
       
[1] dolphin  cat      hamster  goldfish dolphin  hamster  dolphin  goldfish goldfish cat     
[11] dolphin  dolphin  dog      dog      hamster  dolphin  dolphin  goldfish hamster  dog 

cat   dog  dolphin goldfish  hamster 
22     16       28       17       17 


#练习3-3，创建一些以 水果命名的变量。列出用户工作区中所有包含字母“a”的变量。
> fruit<-c("apple","banana","peach","orange","berry","wiki")
> subset(fruit,grepl("a",fruit))
[1] "apple"  "banana" "peach"  "orange"

#问题4-1，你将如何创建一个包含值0、0.25、0.5、0.75、1和1.25的向量？
#答： xiang<-c(0,0.25,0.5,0.75,1,1.25)

#问题4-2，描述两种命名向量元素的方式。
#答：例如 human<-c(LI=1,ZHANG=2)或者human=c(1,2)  names(human)=c(LI,ZHANG)

#问题4-3，向量索引中的四种类型是什么？
#答：逻辑向量、字符向量、复数向量、因子向量

#问题4-4，一个3×4×6的数组的长度是多少？
#答： 72

#问题4-5，你会用哪个操作符来执行两个矩阵的内积？
#答： %*%

#1) 创建 一个从 11 到50长 为3 的 向量, , 再将向量减去向量 c(2,3)?
> a=seq(from=11,to=50,by=3)-c(2,3)
> a
[1]  9 11 15 17 21 23 27 29 33 35 39 41 45 47

#2) 创建 一个从 1.1 到4 ，步长为 20 的向量，再将向量乘向量 c(4,5,8, 9) ？
> b=seq(from=1.1,to=4,by=20)*c(4,5,8,9)
> b
[1] 4.4 5.5 8.8 9.9

#3) 计算 c(1,2,4,6) 和 c(8,0,-1,- 4) 的加减乘除后的
> d=c(1,2,4,6)-c(8,0,-1,-4)
> d
[1] -7  2  5 10

#习4-1，第n个三角形数表示为n * (n + 1) / 2。创建一个包含前50个三角形数的序列。R有一个内置常数letters，它包含小写的罗马字母。使用前15个英文字母来给你刚刚创建的向量命名。选择命名为元音的三角数。
> n=1:50
> tri=c(n*(n+1)/2)
> let=letters[1:15]
> names(tri)=let
> tri[c("a","e","i","o")]
a   e   i   o 
1  15  45 120 
  
# 练习4-2，diag函数有几种用途，其中之一是以输入向量作为对角线来创建一个方阵。使用序列10到0到11（即11,10,...,1,0,1,...,11）创建一个21×21的矩阵。
> t=c(10:0,1:11)
> diag(t)
[,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11]
[1,]   10    0    0    0    0    0    0    0    0     0     0
[2,]    0    9    0    0    0    0    0    0    0     0     0
[3,]    0    0    8    0    0    0    0    0    0     0     0
[4,]    0    0    0    7    0    0    0    0    0     0     0
[5,]    0    0    0    0    6    0    0    0    0     0     0
[6,]    0    0    0    0    0    5    0    0    0     0     0
[7,]    0    0    0    0    0    0    4    0    0     0     0
[8,]    0    0    0    0    0    0    0    3    0     0     0
[9,]    0    0    0    0    0    0    0    0    2     0     0
[10,]    0    0    0    0    0    0    0    0    0     1     0
[11,]    0    0    0    0    0    0    0    0    0     0     0
[12,]    0    0    0    0    0    0    0    0    0     0     0
[13,]    0    0    0    0    0    0    0    0    0     0     0
[14,]    0    0    0    0    0    0    0    0    0     0     0
[15,]    0    0    0    0    0    0    0    0    0     0     0
[16,]    0    0    0    0    0    0    0    0    0     0     0
[17,]    0    0    0    0    0    0    0    0    0     0     0
[18,]    0    0    0    0    0    0    0    0    0     0     0
[19,]    0    0    0    0    0    0    0    0    0     0     0
[20,]    0    0    0    0    0    0    0    0    0     0     0
[21,]    0    0    0    0    0    0    0    0    0     0     0
[22,]    0    0    0    0    0    0    0    0    0     0     0
[,12] [,13] [,14] [,15] [,16] [,17] [,18] [,19] [,20] [,21]
[1,]     0     0     0     0     0     0     0     0     0     0
[2,]     0     0     0     0     0     0     0     0     0     0
[3,]     0     0     0     0     0     0     0     0     0     0
[4,]     0     0     0     0     0     0     0     0     0     0
[5,]     0     0     0     0     0     0     0     0     0     0
[6,]     0     0     0     0     0     0     0     0     0     0
[7,]     0     0     0     0     0     0     0     0     0     0
[8,]     0     0     0     0     0     0     0     0     0     0
[9,]     0     0     0     0     0     0     0     0     0     0
[10,]     0     0     0     0     0     0     0     0     0     0
[11,]     0     0     0     0     0     0     0     0     0     0
[12,]     1     0     0     0     0     0     0     0     0     0
[13,]     0     2     0     0     0     0     0     0     0     0
[14,]     0     0     3     0     0     0     0     0     0     0
[15,]     0     0     0     4     0     0     0     0     0     0
[16,]     0     0     0     0     5     0     0     0     0     0
[17,]     0     0     0     0     0     6     0     0     0     0
[18,]     0     0     0     0     0     0     7     0     0     0
[19,]     0     0     0     0     0     0     0     8     0     0
[20,]     0     0     0     0     0     0     0     0     9     0
[21,]     0     0     0     0     0     0     0     0     0    10
[22,]     0     0     0     0     0     0     0     0     0     0
[,22]
[1,]     0
[2,]     0
[3,]     0
[4,]     0
[5,]     0
[6,]     0
[7,]     0
[8,]     0
[9,]     0
[10,]     0
[11,]     0
[12,]     0
[13,]     0
[14,]     0
[15,]     0
[16,]     0
[17,]     0
[18,]     0
[19,]     0
[20,]     0
[21,]     0
[22,]    11

#题5-1以下列表的长度是多少？
#list(alpha = 1, list(beta = 2, gamma = 3, delta = 4), eta = NULL)
#答：3

# 问题5-2你会在哪里找到成对列表？
#答：formals

# 问题5-3尽可能多地说出的几种创建数据框子集的方法。
#答：data[x,y]    sebset     which()

# 问题5-4如何创建一个数据框，使得它的列名既非唯一又非有效？
#答：将data.frame的check.names=FALSE关闭

# 问题5-5你会使用哪个函数将一个数据框追加到另一个之后？
#答：rbind()

#练习5-1，创建一个列表变量，它的第一个元素包含所有从0到9的平方数，第二个元素为10至19之内的所有平方数，依此类推，最后一个元素为90到99之内的平方数。
liebiao<- list( 
  1 = c(0,1,4,9),
  2 = 16,
3 = 25,
  4 = 36,
  5 = 49,
  6 = 64,
  7 = 81
  )

#练习5-2，R有几个内置的数据集，其中包括由安德森和费舍尔在20世纪30年代收集分析的iris（指鸢尾花，而不是虹膜）数据。输入iris即可看到数据集。创建一个新的数据框，它由iris数据集的数值列组成；计算各列的平均值。
iris_frame <- data.frame(iris)
colMeans(iris_frame[1])
colMeans(iris_frame[2])
colMeans(iris_frame[3])
colMeans(iris_frame[4])
colMeans(iris_frame[5])

#练习5-3，beaver1和beaver2数据集包含两个海狸的体温数据。为beaver1数据集添加一列名为id的列，其值全部为1。同样，也为beaver2添加一个id列，值全为2。垂直拼接两个数据框，并且找到所有活跃着的海狸的子集。
f1 = data.frame(beaver1 , id = 1)
f2 = data.frame(beaver1 , id = 2)
all<- rbind(f1 , f2)
subset(all, activ==1)

